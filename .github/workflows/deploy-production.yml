name: Deploy to production

on:
  push:
    tags:
      - v*.*.*
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: CI checking
        run: npm run ci

      - name: Build
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to staging
        run: |
          aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME_STAGING }} --zip-file fileb://dist/index.zip
          sleep 10

      - name: Run API testing on staging
        run: |
          BASE_URL=$(aws lambda get-function-url-config --function-name  ${{ secrets.LAMBDA_FUNCTION_NAME_STAGING }} | jq -r .FunctionUrl | sed 's,/$,,')
          npx newman run --env-var "BASE_URL=${BASE_URL}" api-tests/example-cleaner-node.postman_collection.json | sed 's,https://[^/]*,https://***,'

      - name: Deploy to production
        run: |
          aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME_PRODUCTION }} --zip-file fileb://dist/index.zip
          sleep 10

      - name: Run API testing on production
        run: |
          BASE_URL=$(aws lambda get-function-url-config --function-name  ${{ secrets.LAMBDA_FUNCTION_NAME_PRODUCTION }} | jq -r .FunctionUrl | sed 's,/$,,')
          npx newman run --env-var "BASE_URL=${BASE_URL}" api-tests/example-cleaner-node.postman_collection.json | sed 's,https://[^/]*,https://***,'
